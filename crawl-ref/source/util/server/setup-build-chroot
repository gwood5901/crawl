#!/bin/bash
#---help---
# Usage: setup-build-chroot -d destination-directory
#
# This script sets up a DCSS server build chroot, and alters the dgamelaunch
# configuration to use it for compilation.
#
# It will run these steps, in order:
# - TODO: run make clean in the build directory
# - bind-mount the existing crawl-build directory into the chroot
# - add a fstab entry to do that automatically
# - patch `dgamelaunch-config/crawl-git.conf` to build via the chroot
# - TODO: warn about the need to commit these changes?
# - install required packages
#
#---help---

set -euo pipefail

die() {
    printf '\033[1;31mERROR:\033[0m %s\n' "$@" >&2  # bold red
    exit 1
}

einfo() {
    printf '\n\033[1;36m> %s\033[0m\n' "$@" >&2  # bold cyan
}

usage() {
    sed -En '/^#---help---/,/^#---help---/p' "$0" | sed -E 's/^# ?//; 1d;$d;'
}

################################################################################

if [ "$(id -u)" -ne 0 ]; then
    die "This script must be run as root!"
fi

while getopts 'd:h' OPTION; do
    case "$OPTION" in
        d) BUILD_CHROOT="$(realpath "$OPTARG")";;
        h) usage; exit 0;;
        *) exit 1;;
    esac
done

[ -z "${BUILD_CHROOT:-""}" ] && die "You must specify a chroot directory with -d";
[ -f "${BUILD_CHROOT}/enter-chroot" ] || die "Build chroot $BUILD_CHROOT does not look correct"

################################################################################

einfo "Binding the crawl-build directory into the chroot"

mkdir -p "$BUILD_CHROOT/crawl-build"

cat >> /etc/fstab <<-EOF
/home/crawl-dev/dgamelaunch-config/crawl-build    $BUILD_CHROOT/crawl-build    none    bind    0    0
EOF

mount -v "$BUILD_CHROOT/crawl-build"

einfo "Patching crawl-git.conf"

(
    cd /home/crawl-dev/dgamelaunch-config/
    git apply <<-EOF
diff --git a/crawl-git.conf b/crawl-git.conf
index 81489fd..3b2709c 100644
--- a/crawl-git.conf
+++ b/crawl-git.conf
@@ -49,7 +49,10 @@ crawl-repo-do() {
 }
 
 crawl-do() {
-    ( cd \$CRAWL_REPO/crawl-ref && "\$@" )
+    sudo /home/crawl-dev/build-chroot/enter-chroot <<-EOF
+        cd /crawl-build/\$CRAWL_REPOSITORY_DIR/crawl-ref
+        \$@
+EOF
 }
 
 git-do() {
EOF
)

einfo "Mounting /proc and /dev/pts"

mount -v --bind /dev/pts "$BUILD_CHROOT/dev/pts"
mount -v --bind /proc "$BUILD_CHROOT/proc"

einfo "Installing required packages"

"$BUILD_CHROOT/enter-chroot" <<-EOF
	apt -y install make git libpcre3-dev libncursesw5-dev python python-yaml \
    pkg-config libpng++-dev libpng-dev
EOF
# maybe libpng12-dev?

einfo "Unmounting /proc and /dev/pts"

umount -v "$BUILD_CHROOT/dev/pts"
umount -v "$BUILD_CHROOT/proc"

einfo 'Done!'
